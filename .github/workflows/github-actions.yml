on:
    push:
        branches: '**'
#        branches: 'master'
        tags: '' # Restrict to blank tags
    pull_request:

jobs:
 unixmatrix:
    runs-on: ${{ matrix.cfg.os }}
    defaults:
        run:
            shell: ${{ matrix.cfg.shell }}
    container: 
        image: ${{ matrix.cfg.container }}
#        options: --platform linux/arm64
    strategy:
        fail-fast: false
        matrix:
            cfg:
            - { os: ubuntu-22.04, shell: bash, arch: amd64, bitness: 64, runtime: jammy, cmake_flags: '-fPIC', ilib: 'gaol', desc: 'Ubuntu 22.04' }
            - { container: 'ubuntu:jammy', os: ubuntu-22.04, shell: bash, arch: tmp, bitness: tmp, runtime: tmp, cmake_flags: '-fPIC', ilib: 'gaol', desc: 'arm' }
###            - { os: macos-14, shell: bash, arch: arm64, bitness: 64, runtime: sonoma, cmake_params: '-D CMAKE_SYSTEM_NAME=Darwin -D CMAKE_OSX_ARCHITECTURES=arm64', cmake_flags: '-fPIC', ilib: 'gaol', desc: 'macOS Sonoma arm64' }
#            - { os: macos-14, shell: bash, arch: x86_64, bitness: 64, runtime: sonoma, cmake_params: '-D CMAKE_SYSTEM_NAME=Darwin -D CMAKE_OSX_ARCHITECTURES=x86_64', cmake_flags: '-fPIC', ilib: 'filib', desc: 'macOS Sonoma x86_64' }
#            - { os: macos-13, shell: bash, arch: arm64, bitness: 64, runtime: ventura, cmake_params: '-D CMAKE_SYSTEM_NAME=Darwin -D CMAKE_OSX_ARCHITECTURES=arm64', cmake_flags: '-fPIC', ilib: 'filib', desc: 'macOS Ventura arm64' }
###            - { os: macos-13, shell: bash, arch: x86_64, bitness: 64, runtime: ventura, cmake_params: '-D CMAKE_SYSTEM_NAME=Darwin -D CMAKE_OSX_ARCHITECTURES=x86_64', cmake_flags: '-fPIC', ilib: 'gaol', desc: 'macOS Ventura x86_64' }
    name: ${{ matrix.cfg.desc }}
    steps: 
    - run: |
        echo ${{ runner.os }}
        echo ${{ runner.container }}
        echo ${{ matrix.cfg.arch }}
        pwd 
        uname -a
        cat /etc/os-release
        lsb_release -a ;
      shell: bash
